clear
set verbose off
open mrw.gdt
include logging.gfn
include multiplot.gfn


list X = gdp60 gdp85 inv
smpl X --no-missing


function void pca_biplot (const list X "Features",
                          const string filename[null] "Optional: path of figure to save",
                          const bool use_vcv[FALSE] "Optional: Use VCV instead of correlation")
    /* Compute PCA and plot the biplot for all combinations among X. */

    string type = (use_vcv == TRUE) ? "--covariance" : ""
    scalar T = $nobs
    scalar nX = nelem(X)
    matrix Z = {stdize(X)}
    strings vnames = varnames(X)
    matrix eigenvectors = {}
    strings filenames = array(0)

    smpl X --no-missing
    if $nobs < T
        Warn("Removed observations with missing values.")
    endif

    if use_vcv
        Info("Compute PCA using the variance-covariance among features.")
    else
        Info("Compute PCA using correlation among features.")
    endif
    pca X --save-all --quiet @type

    list PC = PC*

    eigensym(Z'Z, &eigenvectors)
    eigenvectors = mreverse(eigenvectors, TRUE)

    loop foreach i X     # y-axis
        loop foreach j X # x-axis
            if "X.$i" != "X.$j" && j < i
                series fac1 = Z * eigenvectors[,i]
                series fac2 = Z * eigenvectors[,j]
                list L = fac2 fac1

                # construct the arrow coordinates
                string arrow = ""
                string label = ""
                scalar shift = 0#.1
                loop l=1..nX
                    arrow += sprintf("set arrow to %g,%g lt 1 lw 1 lc rgb 'red'\n", eigenvectors[l, i], eigenvectors[l, j])
                    label += sprintf("set label '%s' at %g,%g tc rgb 'red'\n", \
                      vnames[l], (shift + eigenvectors[l, i]), (shift + eigenvectors[l, j]))
                endloop

                fname = sprintf("%s/pcaplot_%d.gp", $dotdir, randint(0, 10e6))
                plot L
                    options fit=none
                    literal set nokey
                    printf "set xlabel \"Principal component %d\"", i
                    printf "set ylabel \"Principal component %d\"", j
                    literal @arrow
                    literal @label
                end plot --output="@fname"
                filenames += fname
            endif
        endloop
    endloop

    multiplot(filenames, "foo.png")
end function

pca_biplot(X)
